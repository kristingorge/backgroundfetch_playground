{"version":3,"sources":["sw.ts"],"names":[],"mappings":";AA2CA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WA/BA,SAAe,EAAY,GA+B3B,OAAA,EAAA,UAAA,OAAA,EAAA,YA9BU,MAAA,QAAmB,QAAQ,SAAS,CAAC,KAAM,WAC5C,IAAA,MAAM,KAAU,EACjB,EAAO,YAAY,KAI3B,SAAS,EAA2B,GAChC,EAAY,CACR,UAAW,EAAM,KACjB,GAAI,EAAM,aAAa,GACvB,WAAY,EAAM,aAAa,WAC/B,cAAe,EAAM,aAAa,cAClC,SAAU,EAAM,aAAa,SAC7B,YAAa,EAAM,aAAa,YAChC,cAAe,EAAM,aAAa,gBAtB1C,KAAK,iBAAiB,UAAY,IAG9B,EAAM,UAAU,KAAK,iBAuBzB,KAAK,iBAAiB,uBAAyB,IAC3C,EAA2B,KAG/B,KAAK,iBAAiB,yBAAiC,GAAc,OAAA,OAAA,OAAA,EAAA,YACjE,EAA2B,MAG/B,KAAK,iBAAiB,sBAA8B,GAAc,OAAA,OAAA,OAAA,EAAA,YAC9D,EAA2B,MAG/B,KAAK,iBAAiB,uBAA+B,GAAc,OAAA,OAAA,OAAA,EAAA,YAC/D,EAA2B","file":"sw.js","sourceRoot":"../src","sourcesContent":["import { } from \".\";\n\ndeclare var self: ServiceWorkerGlobalScope;\ndeclare var clients: any;\n\nself.addEventListener(\"install\", (event: ExtendableEvent) => {\n    // Use waitUntil to make sure the ServiceWorker doesn't accidentally get killed by the browser.\n    // Skip waiting to install latest version since there are no breaking change right now.\n    event.waitUntil(self.skipWaiting());\n});\n\n// Post message to all open tabs associated with this ServiceWorker.\nasync function postMessage(msg: any) {\n    const allClients = await clients.matchAll({type: 'window'});\n    for (const client of allClients) {\n        client.postMessage(msg);\n    }\n}\n\nfunction handleBackgroundFetchEvent(event: any) {\n    postMessage({\n        eventType: event.type,\n        id: event.registration.id,\n        downloaded: event.registration.downloaded,\n        downloadTotal: event.registration.downloadTotal,\n        uploaded: event.registration.uploaded,\n        uploadTotal: event.registration.uploadTotal,\n        failureReason: event.registration.failureReason,\n    });\n}\n\nself.addEventListener('backgroundfetchclick', (event: any) => {\n    handleBackgroundFetchEvent(event);\n});\n\nself.addEventListener('backgroundfetchsuccess', async (event: any) => {\n    handleBackgroundFetchEvent(event);\n});\n\nself.addEventListener('backgroundfetchfail', async (event: any) => {\n    handleBackgroundFetchEvent(event);\n});\n\nself.addEventListener('backgroundfetchabort', async (event: any) => {\n    handleBackgroundFetchEvent(event);\n});"]}